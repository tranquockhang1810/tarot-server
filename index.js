const express = require('express');
const http = require("http");
const cors = require('cors');
const path = require("path");
const swagger = require('./utils/swagger.js');
const { initSocket } = require("./sockets/socket"); // Import file socket.js

// ENV
require('dotenv').config();

// DATABASE
require('./dbs/mongo.db.js');

// Khá»Ÿi táº¡o Express
const app = express();
const server = http.createServer(app); // ğŸ”¥ DÃ¹ng http Ä‘á»ƒ táº¡o server

// TÃ­ch há»£p Swagger
swagger(app);

// CORS
var corsOptionsDelegate = function (req, callback) {
  var corsOptions = { origin: true };
  callback(null, corsOptions);
}

app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cors(corsOptionsDelegate));

// Routes
app.use(require("./routes/index"));
app.use("/card", express.static(path.join(__dirname, "card")));

// Cron job
require("./cron/chatCron");

// Khá»Ÿi Ä‘á»™ng WebSocket
initSocket(server);

// const { updateOldChats } = require("./controllers/chat.controller");
// updateOldChats().then(() => {
//   console.log("âœ… Manual chat update completed.");
//   process.exit(); // ThoÃ¡t process sau khi cháº¡y xong
// });

// Error Handler
app.use((err, req, res, next) => {
  const error = err.message ? err.message : err;
  const status = err.status ? err.status : 500;

  return res.status(status).json({
    error: {
      code: status,
      message: error
    }
  });
});

// Cháº¡y server vá»›i WebSocket
const PORT = process.env.PORT || 5000;
server.listen(PORT, () => console.log(`ğŸš€ Server is running on port ${PORT}`));
